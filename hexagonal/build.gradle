plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
        vendor = JvmVendorSpec.ADOPTIUM
    }
    compileJava {
        options.encoding = "UTF-8"
        options.fork = true
    }
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation("org.springframework.boot:spring-boot-starter-validation")
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    // mapper
    implementation("org.mapstruct:mapstruct:1.5.5.Final")
    annotationProcessor("org.mapstruct:mapstruct-processor:1.5.5.Final")

    // # JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.4'
    // ## QueryDSL
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("com.querydsl:querydsl-jpa:5.0.0:jakarta")
    annotationProcessor("com.querydsl:querydsl-apt:5.0.0:jakarta")
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")

    // # DB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:3.1.5'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks {
    bootJar {
        archiveFileName.set("app.jar")
        mainClass.set("com.example.hexagonal.HexagonalApplication")
    }
    bootRun {
        mainClass.set("com.example.hexagonal.HexagonalApplication")
        args(
                "-server",
                "-Xss256m",
                "-Xmx1G",
                "-Djava.net.preferIPv4Stack=true")
    }
}